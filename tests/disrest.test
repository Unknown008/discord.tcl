# Commands covered: DictToJson, ListToJsonArray
#
# disrest.test --
#
#       This file contains tests for commands in the discord::rest namespace.
#       Sourcing this file into Tcl runs the tests and generates output for
#       errors. No output means no errors were found.
#
# Copyright (c) 2016, Yixin Zhang
#
# See the file "LICENSE" for information on usage and redistribution of this
# file.

package require tcltest
namespace import tcltest::*

;# Uncomment the next line to show more verbose output.
;#verbose [list body error start usec]

set scriptDir [file dirname [info script]]

# Add parent directory to auto_path to load the discord package.

lappend ::auto_path "$scriptDir/../"
package require discord

test DictToJson-1.1 {Empty dictionary} -body {
    discord::rest::DictToJson [dict create] [dict create]
} -result {{}}

test DictToJson-1.2 {One key, type string} -body {
    discord::rest::DictToJson [dict create id 123] [dict create id string]
} -result {{"id":"123"}}

test DictToJson-1.3 {One key, type bare} -body {
    discord::rest::DictToJson [dict create id 123] [dict create id bare]
} -result {{"id":123}}

test DictToJson-1.4 {One key, type array of strings} -body {
    discord::rest::DictToJson [dict create ids [list 1 2 3]] \
            [dict create ids [list array string]]
} -result {{"ids":["1","2","3"]}}

test ListToJsonArray-1.1 {Empty list} -body {
    discord::rest::ListToJsonArray [list] string
} -result {[]}

test ListToJsonArray-1.2 {One element, type string} -body {
    discord::rest::ListToJsonArray [list foo] string
} -result {["foo"]}

test ListToJsonArray-1.3 {One element, type array, subtype string} -body {
    discord::rest::ListToJsonArray [list [list foo bar]] array string
} -result {[["foo","bar"]]}

test ListToJsonArray-1.4 {One element, type object} -body {
    discord::rest::ListToJsonArray [list [dict create id 123]] object \
            [dict create id string]
} -result {[{"id":"123"}]}

test ListToJsonArray-1.5 {Two elements, type string} -body {
    discord::rest::ListToJsonArray [list foo bar] string
} -result {["foo","bar"]}

test ListToJsonArray-1.6 {Two elements, type array, subtype string} -body {
    discord::rest::ListToJsonArray [list [list foo bar] [list alice bob]] \
            array string
} -result {[["foo","bar"],["alice","bob"]]}

test ListToJsonArray-1.7 {Two elements, type object} -body {
    discord::rest::ListToJsonArray [list [dict create id 123] \
            [dict create id 456]] object [dict create id string]
} -result {[{"id":"123"},{"id":"456"}]}

test ListToJsonArray-1.8 {One element, type array, subtype object} -body {
    discord::rest::ListToJsonArray [list [list [dict create id 123] \
            [dict create id 456]] [list [dict create id abc] \
            [dict create id def]]] array [list object [dict create id string]]
} -result {[[{"id":"123"},{"id":"456"}],[{"id":"abc"},{"id":"def"}]]}
